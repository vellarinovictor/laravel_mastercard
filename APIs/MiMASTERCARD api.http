###
# Ver movimientos de una de mis cuentas
#
# @ ver los movimientos de una de mis cuentas
#
GET http://192.168.56.5:8000/api/cuentas/ES3664597645407000825055/movimientos
Authorization: Bearer 4|bc3rhmuKQmJsKXGAttYkAXKFqDfigf6TFblwqv7x1ee4b743

###
# MiMASTERCARD api

###
# @name hacer login
# This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).
# A successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.
POST http://192.168.56.5:8000/api/login?
    email=sara.turquoise@yahoo.es&
    password=pass
Content-Type: application/json

{
	"name": "Add your name in the body"
}

> {%
    // TODO: migrate to HTTP Client Response handler API
    // pm.test("Successful PUT request", function () {
    //     pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);
    // });
    //
%}

###
# @name ver saldo en una de mis cuentas
# This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).
# A successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.
GET http://192.168.56.5:8000/api/cuentas/ES2993442146612906957050/saldo
Authorization: Bearer 1|kTF1nGDk8AvSLiOICYJgnuutI4E1yWNv0NgF2vbxd8926780

> {%
    // TODO: migrate to HTTP Client Response handler API
    // pm.test("Successful DELETE request", function () {
    //     pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);
    // });
    //
%}

###
# @name ver mis cuentas
# This is a , request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).
# A successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.
GET http://192.168.56.5:8000/api/clientes/cuentas/
Authorization: Bearer 1|kTF1nGDk8AvSLiOICYJgnuutI4E1yWNv0NgF2vbxd8926780

> {%
    // TODO: migrate to HTTP Client Response handler API
    // pm.test("Successful DELETE request", function () {
    //     pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);
    // });
    //
%}

###
# @name ver mis tarjetas
# This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).
# A successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.
GET http://192.168.56.5:8000/api/clientes/tarjetas/
Authorization: Bearer 1|kTF1nGDk8AvSLiOICYJgnuutI4E1yWNv0NgF2vbxd8926780

> {%
    // TODO: migrate to HTTP Client Response handler API
    // pm.test("Successful DELETE request", function () {
    //     pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);
    // });
    //
%}

